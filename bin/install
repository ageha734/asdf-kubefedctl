#!/usr/bin/env bash

set -e
set -o pipefail

TMPDIR=${TMPDIR:-/tmp}

get_platform() {
  echo "$(uname | tr '[:upper:]' '[:lower:]')-amd64"
}

get_filename() {
  local version=$1
  local platform="$2"
  local binary_name="$3"

  echo "${binary_name}-${version}-${platform}.tgz"
}

get_download_url() {
  local version="$1"
  local platform="$2"
  local binary_name="$3"
  local filename
  filename="$(get_filename "$version" "$platform" "$binary_name")"

  # https://github.com/kubernetes-retired/kubefed/releases/download/v0.10.0/kubefedctl-0.10.0-darwin-amd64.tgz
  echo "https://github.com/kubernetes-retired/kubefed/releases/download/v${version}/${filename}"
}

install_tool() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local binary_name=$4

  local platform
  local bin_install_path="$install_path/bin"
  local binary_path="$bin_install_path/${binary_name}"
  local download_url
  local download_path
  local tmp_path
  local tmp_file

  platform=$(get_platform)
  download_url=$(get_download_url "$version" "$platform" "$binary_name")
  download_path="$tmp_download_dir/"$(get_filename "$version" "$platform" "$binary_name")
  tmp_path="$TMPDIR/${binary_name}"
  tmp_file="$tmp_path/$(get_filename "$version" "$platform" "$binary_name")"

  echo "Creating bin directory"
  mkdir -p "${bin_install_path}"

  echo "Creating tmp directory"
  mkdir -p "${tmp_path}"

  echo "Downloading [${binary_name}] from ${download_url} to ${tmp_file}"
  curl -s -L "$download_url" -o "$tmp_file"

  echo "Extracting archive"
  tar xf "${tmp_file}" -C "${bin_install_path}"

  echo "Cleaning previous binaries"
  rm -rf "${tmp_path}"

  echo "Copying binary"
  chmod +x "${binary_path}"
}

install_tool "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH" kubefedctl
